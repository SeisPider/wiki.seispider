<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GIT on SeisPider&#39;s wiki</title>
    <link>http://wiki.seispider.top/git/</link>
    <description>Recent content in GIT on SeisPider&#39;s wiki</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 08 Jan 2019 10:36:24 +0200</lastBuildDate>
    
	<atom:link href="http://wiki.seispider.top/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Fundamental Usage</title>
      <link>http://wiki.seispider.top/git/fund-usage/</link>
      <pubDate>Wed, 02 Aug 2017 16:24:01 +0800</pubDate>
      
      <guid>http://wiki.seispider.top/git/fund-usage/</guid>
      <description>版本回退  查看版本log
$ git log --pretty=oneline 3628164fb26d48395383f8f31179f24e0882e1e0 append GPL  3628164fb26d48395383f8f31179f24e0882e1e0是版本号。
 版本回退
$ git reset --hard HEAD^  HEAD表示当前版本，HEAD^表示上一个版本，HEAD~100表示前100个版本。 或者&amp;ndash;hard后面可以加版本号。
$ git reset --hard 3628164  写版本号前多少位没关系，关键是能够定位到只有一个版本。
  Note:git reflog 记录了用户所有的操作。
删除文件 通常利用rm删除了文件，此时可以有两种选择：
 在版本库中删除文件git rm file 删错了，恢复文件git checkout --file git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。  从coding.net克隆仓库 git clone git@git.</description>
    </item>
    
    <item>
      <title>Git commits</title>
      <link>http://wiki.seispider.top/git/gitcommit/</link>
      <pubDate>Wed, 02 Aug 2017 16:24:01 +0800</pubDate>
      
      <guid>http://wiki.seispider.top/git/gitcommit/</guid>
      <description>Function of Commit message  Provide more historical information and readly for quickly checking development process. bash git log &amp;lt;last tag&amp;gt; HEAD --pretty=format:%s  Above commend can provide brief information of project Filter information in backtracking development history  git log &amp;lt;last release&amp;gt; HEAD --grep feature  Above commend can only check the new features Generate Change log directly based on commits.conventional-changelog  Format of Commit message Standard commits are consisted of tree components: Header, Body and Footer</description>
    </item>
    
  </channel>
</rss>